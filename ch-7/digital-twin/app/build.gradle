/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.3/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    id 'application'

}

ext {
    // https://search.maven.org/artifact/org.apache.kafka/kafka-streams
    //kafkaVersion = '2.7.0'
    kafkaVersion = '3.5.1'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // kafka
    //https://mvnrepository.com/artifact/org.apache.kafka/kafka-streams
    implementation "org.apache.kafka:kafka-streams:${kafkaVersion}"

    // required for JSON serializer
    // required by custom serdes for deserialization(byte-stream to json) and serialization (json to byte-stream)
    implementation 'com.google.code.gson:gson:2.8.9'

    // for loading config from a file.
    implementation 'com.typesafe:config:1.3.3'

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:32.1.1-jre'

    //lombok
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    //rocksdb
    // https://mvnrepository.com/artifact/org.rocksdb/rocksdbjni?repo=redhat-ga
    //implementation 'org.rocksdb:rocksdbjni:5.18.4'
    implementation 'org.rocksdb:rocksdbjni:8.3.2'   // without


    // For Remote Queries
    // Exposing a readonly state-store to external world using REST API
    // required for interactive queries (server)
    implementation 'io.javalin:javalin:3.12.0'
    // required for interactive queries (client)
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'

    // logging - Dependency for Remote Queries
    implementation 'org.slf4j:slf4j-api:1.8.0-beta4'
    implementation 'org.slf4j:slf4j-simple:1.8.0-beta4'
    implementation 'ch.qos.logback:logback-classic:1.2.3'

    // json - to generate stream data
    implementation group: 'org.json', name: 'json', version: '20210307'


}

// for lombok support
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

tasks.withType(JavaCompile) {
    options.annotationProcessorPath = configurations.annotationProcessor
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(20)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'com.example.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

//task runGameLeaderboard(type: JavaExec) {
//    main = 'com.example.App'
//    classpath sourceSets.main.runtimeClasspath
//}

// local store for App:8080

task runFirst(type: JavaExec) {
    main = 'com.example.App'
    classpath sourceSets.main.runtimeClasspath
    systemProperties = [
            'host': 'localhost',
            'port': '8080',
            'stateDir': '/tmp/kafka-streams'
    ]
}

task runSecond(type: JavaExec) {
    main = 'com.example.App'
    classpath sourceSets.main.runtimeClasspath
    systemProperties = [
            'host': 'localhost',
            'port': '8081',
            'stateDir': '/tmp/kafka-streams2'
    ]
}
